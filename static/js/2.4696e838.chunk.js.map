{"version":3,"sources":["component/Dialogs/Dialog/DialogComponent.js","component/Dialogs/Dialog/Dialog.js","component/Dialogs/Message/MessageComponent.js","component/Dialogs/Message/Message.js","component/Dialogs/Dialogs.js","component/Redux/ReduxSelectors/diologs-selector.js","component/Dialogs/DialogsContaianer.js"],"names":["DialogItem","styled","li","_templateObject","Object","taggedTemplateLiteral","DialogImg","img","_templateObject2","NavLink","Link","_templateObject3","Dialog","_ref","id","name","react_default","a","createElement","Fragment","src","activeClassName","to","concat","MessageItemWrapper","div","MessageComponent_templateObject","MessageItem","MessageComponent_templateObject2","MessageImg","MessageComponent_templateObject3","MessageText","_templateObject4","Message","message","Dialogs","addNewMessage","dialogPage","mapedDialog","dialogs","map","dialog","Dialogs_Dialog_Dialog","key","mapedMessages","messages","Dialogs_Message_Message","DialogsComponent","react_final_form_es","onSubmit","messageData","render","_ref2","handleSubmit","fieldCreator","composeValidators","required","maxLength","getInputValue","state","newPostMessage","getDialogPage","compose","withAuthCheck","connect","inputValue"],"mappings":"iKAGaA,EAAaC,IAAOC,GAAVC,MAAAC,OAAAC,EAAA,EAAAD,CAAA,6EAMVE,EAAYL,IAAOM,IAAVC,MAAAJ,OAAAC,EAAA,EAAAD,CAAA,mEAMTK,EAAUR,YAAOS,IAAPT,CAAHU,MAAAP,OAAAC,EAAA,EAAAD,CAAA,kHCILQ,EAZA,SAAAC,GAAmB,IAAjBN,EAAiBM,EAAjBN,IAAIO,EAAaD,EAAbC,GAAGC,EAAUF,EAAVE,KAEpB,OACIC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAAClB,EAAD,KACIgB,EAAAC,EAAAC,cAACZ,EAAD,CAAYc,IAAOb,IACnBS,EAAAC,EAAAC,cAACT,EAAD,CAASY,gBAAkB,SAAUC,GAAE,YAAAC,OAAgBT,IAAvD,IAA+DC,EAA/D,QCXHS,EAAqBvB,IAAOwB,IAAVC,MAAAtB,OAAAC,EAAA,EAAAD,CAAA,cAGlBuB,EAAc1B,IAAOwB,IAAVG,MAAAxB,OAAAC,EAAA,EAAAD,CAAA,0PAYXyB,EAAa5B,IAAOM,IAAVuB,MAAA1B,OAAAC,EAAA,EAAAD,CAAA,kEAMV2B,EAAc9B,IAAOwB,IAAVO,MAAA5B,OAAAC,EAAA,EAAAD,CAAA,cCCT6B,EAfC,SAAApB,GAAmB,IAAjBqB,EAAiBrB,EAAjBqB,QAAQ3B,EAASM,EAATN,IAEtB,OAEIS,EAAAC,EAAAC,cAACM,EAAD,KACIR,EAAAC,EAAAC,cAACS,EAAD,KACIX,EAAAC,EAAAC,cAACW,EAAD,CAAYT,IAAKb,IACjBS,EAAAC,EAAAC,cAACa,EAAD,KACKG,sCC4CNC,EA7CC,SAAAtB,GAAkC,IAAhCuB,EAAgCvB,EAAhCuB,cAAeC,EAAiBxB,EAAjBwB,WAEvBC,EAAcD,EAAWE,QAAQC,IAAI,SAAAC,GAAM,OAAIzB,EAAAC,EAAAC,cAACwB,EAAD,CAAQC,IAAKF,EAAO3B,GAAIC,KAAM0B,EAAO1B,KAAMD,GAAI2B,EAAO3B,GAC9CP,IAAKkC,EAAOlC,QACnEqC,EAAgBP,EAAWQ,SAASL,IAAI,SAACN,GAAD,OAAalB,EAAAC,EAAAC,cAAC4B,EAAD,CAASH,IAAKT,EAAQpB,GAAIoB,QAASA,EAAQA,QAClC3B,IAAK2B,EAAQ3B,QAOjF,OACIS,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACI/B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACI/B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACKT,GAELtB,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACKH,IAGT5B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACI/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAMC,SAhBC,SAACC,GAChBd,EAAcc,EAAYhB,UAgBZiB,OAAQ,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,aAAF,OACJrC,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAaE,SAAUI,GAClBC,YACG,OACAC,YAAkBC,IAAUC,YAAU,KACtC,UACA,OACA,eAGJzC,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,kDClDjBW,EAAgB,SAACC,GAC1B,OAAOA,EAAMtB,WAAWuB,gBAEfC,EAAgB,SAACF,GAC1B,OAAOA,EAAMtB,YCcFyB,sBACXC,IACAC,YATkB,SAACL,GACnB,MAAO,CACHM,WAAYP,EAAcC,GAC1BtB,WAAYwB,EAAcF,KAML,CAACvB,oBAFf0B,CAEgC3B","file":"static/js/2.4696e838.chunk.js","sourcesContent":["import styled from 'styled-components'\r\nimport {NavLink as Link} from \"react-router-dom\";\r\n\r\nexport const DialogItem = styled.li`\r\n  font-size: 24px;\r\n  text-decoration: none;\r\n  list-style: none;\r\n`\r\n\r\nexport const DialogImg = styled.img`\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 30px;\r\n`\r\n\r\nexport const NavLink = styled(Link)`\r\n  text-decoration: none;\r\n  list-style: none;\r\n  color: black;\r\n  \r\n  &.active {\r\n    color: red;\r\n  }\r\n`","import React from 'react'\r\nimport {\r\n    DialogItem,\r\n    DialogImg,\r\n    NavLink\r\n} from './DialogComponent'\r\n\r\nconst Dialog = ({img,id,name}) => {\r\n    \r\n    return (\r\n        <>\r\n            <DialogItem>\r\n                <DialogImg  src = {img} />\r\n                <NavLink activeClassName = 'active'  to = {`/dialogs/${id}`}> {name} </NavLink>\r\n            </DialogItem>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dialog\r\n","import styled from \"styled-components\";\r\n\r\nexport const MessageItemWrapper = styled.div`\r\n  \r\n`\r\nexport const MessageItem = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 15px 0;\r\n  font-size: 20px;\r\n  border-radius: 20px;\r\n  border: rgb(103, 212, 248) solid;\r\n  background-color: rgb(103, 212, 248);\r\n  padding: 5px 10px;\r\n  align-items: center;\r\n`\r\n\r\nexport const MessageImg = styled.img`\r\n  height: 30px;\r\n  width: 30px;\r\n  border-radius: 30px\r\n`\r\n\r\nexport const MessageText = styled.div`\r\n  \r\n`","import React from 'react'\r\nimport {\r\n    MessageItemWrapper,\r\n    MessageItem,\r\n    MessageImg,\r\n    MessageText\r\n} from './MessageComponent'\r\n\r\n\r\nconst Message = ({message,img}) => {\r\n\r\n    return (\r\n\r\n        <MessageItemWrapper>\r\n            <MessageItem >\r\n                <MessageImg src={img} />\r\n                <MessageText >\r\n                    {message}\r\n                </MessageText>\r\n            </MessageItem>\r\n        </MessageItemWrapper>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport {\r\n    DialogList,\r\n    DialogsWrapper,\r\n    DialogWrap,\r\n    InputButtonWrap,\r\n    MessageButton,\r\n    MessageForm,\r\n    MessageItems\r\n} from \"./DialogsComponent\";\r\nimport {Form} from 'react-final-form'\r\nimport {composeValidators, maxLength, required} from \"../Common/RequiresDirectory/Requires\";\r\nimport {fieldCreator} from \"../Common/FieldCreator/fieldCreator\";\r\n\r\nconst Dialogs = ({addNewMessage, dialogPage,}) => {\r\n\r\n    const mapedDialog = dialogPage.dialogs.map(dialog => <Dialog key={dialog.id} name={dialog.name} id={dialog.id}\r\n                                                                 img={dialog.img}/>)\r\n    const mapedMessages = dialogPage.messages.map((message) => <Message key={message.id} message={message.message}\r\n                                                                        img={message.img}/>)\r\n\r\n    const addMessage = (messageData) => {\r\n        addNewMessage(messageData.message);\r\n\r\n    }\r\n\r\n    return (\r\n        <DialogsWrapper>\r\n            <DialogWrap>\r\n                <DialogList>\r\n                    {mapedDialog}\r\n                </DialogList>\r\n                <MessageItems>\r\n                    {mapedMessages}\r\n                </MessageItems>\r\n            </DialogWrap>\r\n            <InputButtonWrap>\r\n                <Form onSubmit={addMessage}\r\n                      render={({handleSubmit}) => (\r\n                          <MessageForm onSubmit={handleSubmit}>\r\n                              {fieldCreator(\r\n                                  'text',\r\n                                  composeValidators(required, maxLength(50)),\r\n                                  'message',\r\n                                  'text',\r\n                                  'Add Message'\r\n                              )\r\n                              }\r\n                              <MessageButton>Add Message</MessageButton>\r\n                          </MessageForm>\r\n                      )}\r\n                />\r\n\r\n\r\n            </InputButtonWrap>\r\n        </DialogsWrapper>\r\n    )\r\n}\r\n\r\nexport default Dialogs\r\n","export const getInputValue = (state) => {\r\n    return state.dialogPage.newPostMessage\r\n}\r\nexport const getDialogPage = (state) => {\r\n    return state.dialogPage\r\n}\r\n\r\n","import {\r\n    addNewMessage,\r\n\r\n} from '../Redux/dialog-reducer'\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nimport {connect} from 'react-redux'\r\nimport {withAuthCheck} from \"../hoc/withAuthHok\";\r\nimport {compose} from \"redux\";\r\nimport {getDialogPage, getInputValue} from \"../Redux/ReduxSelectors/diologs-selector\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        inputValue: getInputValue(state),\r\n        dialogPage: getDialogPage(state),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthCheck,\r\n    connect(mapStateToProps, {addNewMessage}))(Dialogs)\r\n\r\n"],"sourceRoot":""}